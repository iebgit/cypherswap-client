{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { alpha, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n    classes = props.classes,\n    className = props.className,\n    collapseIcon = props.collapseIcon,\n    endIcon = props.endIcon,\n    expandIcon = props.expandIcon,\n    iconProp = props.icon,\n    label = props.label,\n    nodeId = props.nodeId,\n    onClick = props.onClick,\n    onLabelClick = props.onLabelClick,\n    onIconClick = props.onIconClick,\n    onFocus = props.onFocus,\n    onKeyDown = props.onKeyDown,\n    onMouseDown = props.onMouseDown,\n    _props$TransitionComp = props.TransitionComponent,\n    TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n    TransitionProps = props.TransitionProps,\n    other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n  var _React$useContext = React.useContext(TreeViewContext),\n    contextIcons = _React$useContext.icons,\n    focus = _React$useContext.focus,\n    focusFirstNode = _React$useContext.focusFirstNode,\n    focusLastNode = _React$useContext.focusLastNode,\n    focusNextNode = _React$useContext.focusNextNode,\n    focusPreviousNode = _React$useContext.focusPreviousNode,\n    focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n    selectNode = _React$useContext.selectNode,\n    selectRange = _React$useContext.selectRange,\n    selectNextNode = _React$useContext.selectNextNode,\n    selectPreviousNode = _React$useContext.selectPreviousNode,\n    rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n    rangeSelectToLast = _React$useContext.rangeSelectToLast,\n    selectAllNodes = _React$useContext.selectAllNodes,\n    expandAllSiblings = _React$useContext.expandAllSiblings,\n    toggleExpansion = _React$useContext.toggleExpansion,\n    isExpanded = _React$useContext.isExpanded,\n    isFocused = _React$useContext.isFocused,\n    isSelected = _React$useContext.isSelected,\n    isTabbable = _React$useContext.isTabbable,\n    multiSelect = _React$useContext.multiSelect,\n    getParent = _React$useContext.getParent,\n    mapFirstChar = _React$useContext.mapFirstChar,\n    addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n    removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n    return true;\n  };\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n    var parent = getParent(nodeId);\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n    return false;\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n        event.stopPropagation();\n        break;\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n        event.stopPropagation();\n        break;\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n        break;\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n        break;\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n        focusFirstNode();\n        flag = true;\n        break;\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n        focusLastNode();\n        flag = true;\n        break;\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n    }\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","clsx","PropTypes","Typography","Collapse","alpha","withStyles","useTheme","useForkRef","TreeViewContext","styles","theme","root","listStyle","margin","padding","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","primary","main","selectedOpacity","hoverOpacity","expanded","selected","group","marginLeft","content","width","display","alignItems","cursor","iconContainer","marginRight","flexShrink","justifyContent","fontSize","label","paddingLeft","position","isPrintableCharacter","str","length","match","TreeItem","forwardRef","props","ref","children","classes","className","collapseIcon","endIcon","expandIcon","iconProp","icon","nodeId","onClick","onLabelClick","onIconClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","TransitionProps","other","_React$useContext","useContext","contextIcons","icons","focus","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","selectNode","selectRange","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","expandAllSiblings","toggleExpansion","isExpanded","isFocused","isSelected","isTabbable","multiSelect","getParent","mapFirstChar","addNodeToNodeMap","removeNodeFromNodeMap","nodeRef","useRef","contentRef","handleRef","expandable","Boolean","Array","isArray","focused","tabbable","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","handleClick","event","multiple","shiftKey","ctrlKey","metaKey","defaultPrevented","end","handleMouseDown","preventDefault","handleNextArrow","handlePreviousArrow","parent","handleKeyDown","flag","key","altKey","currentTarget","target","ctrlPressed","current","stopPropagation","direction","toLowerCase","handleFocus","useEffect","childIds","Children","forEach","child","isValidElement","push","undefined","textContent","substring","ariaSelected","createElement","role","tabIndex","component","unmountOnExit","in","process","env","NODE_ENV","propTypes","node","object","string","isRequired","func","elementType","name"],"sources":["/Users/Ibis/Projects/project_mern_memories/client/node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { alpha, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onLabelClick = props.onLabelClick,\n      onIconClick = props.onIconClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onLabelClick\", \"onIconClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !event.defaultPrevented && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: onIconClick,\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    onClick: onLabelClick,\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `onClick` handler for the icon container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onIconClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * `onClick` handler for the label container. Call `event.preventDefault()` to prevent `onNodeToggle` from being called.\n   */\n  onLabelClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,wBAAwB,MAAM,oDAAoD;;AAEzF;AACA,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,KAAK,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,0BAA0B;AACtE,SAASC,UAAU,QAAQ,yBAAyB;AACpD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAM,CAACC,KAAK,EAAE;EACzC,OAAO;IACL;IACAC,IAAI,EAAE;MACJC,SAAS,EAAE,MAAM;MACjBC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC;MACVC,uBAAuB,EAAE,aAAa;MACtC,2BAA2B,EAAE;QAC3BC,eAAe,EAAEP,KAAK,CAACQ,OAAO,CAACC,MAAM,CAACC;MACxC,CAAC;MACD,8BAA8B,EAAE;QAC9BH,eAAe,EAAEb,KAAK,CAACM,KAAK,CAACQ,OAAO,CAACG,OAAO,CAACC,IAAI,EAAEZ,KAAK,CAACQ,OAAO,CAACC,MAAM,CAACI,eAAe;MACzF,CAAC;MACD,wEAAwE,EAAE;QACxEN,eAAe,EAAEb,KAAK,CAACM,KAAK,CAACQ,OAAO,CAACG,OAAO,CAACC,IAAI,EAAEZ,KAAK,CAACQ,OAAO,CAACC,MAAM,CAACI,eAAe,GAAGb,KAAK,CAACQ,OAAO,CAACC,MAAM,CAACK,YAAY,CAAC;QAC5H;QACA,sBAAsB,EAAE;UACtBP,eAAe,EAAE;QACnB;MACF;IACF,CAAC;IAED;IACAQ,QAAQ,EAAE,CAAC,CAAC;IAEZ;IACAC,QAAQ,EAAE,CAAC,CAAC;IAEZ;IACAC,KAAK,EAAE;MACLd,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,CAAC;MACVc,UAAU,EAAE;IACd,CAAC;IAED;IACAC,OAAO,EAAE;MACPC,KAAK,EAAE,MAAM;MACbC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE;IACV,CAAC;IAED;IACAC,aAAa,EAAE;MACbC,WAAW,EAAE,CAAC;MACdL,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,MAAM;MACfK,UAAU,EAAE,CAAC;MACbC,cAAc,EAAE,QAAQ;MACxB,OAAO,EAAE;QACPC,QAAQ,EAAE;MACZ;IACF,CAAC;IAED;IACAC,KAAK,EAAE;MACLT,KAAK,EAAE,MAAM;MACbU,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE,UAAU;MACpB,SAAS,EAAE;QACTxB,eAAe,EAAEP,KAAK,CAACQ,OAAO,CAACC,MAAM,CAACC,KAAK;QAC3C;QACA,sBAAsB,EAAE;UACtBH,eAAe,EAAE;QACnB;MACF;IACF;EACF,CAAC;AACH,CAAC;AAED,IAAIyB,oBAAoB,GAAG,SAASA,oBAAoB,CAACC,GAAG,EAAE;EAC5D,OAAOA,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAK,CAAC,IAAID,GAAG,CAACE,KAAK,CAAC,IAAI,CAAC;AACnD,CAAC;AAED,IAAIC,QAAQ,GAAG,aAAa/C,KAAK,CAACgD,UAAU,CAAC,SAASD,QAAQ,CAACE,KAAK,EAAEC,GAAG,EAAE;EACzE,IAAIC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IACzBC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,SAAS,GAAGJ,KAAK,CAACI,SAAS;IAC3BC,YAAY,GAAGL,KAAK,CAACK,YAAY;IACjCC,OAAO,GAAGN,KAAK,CAACM,OAAO;IACvBC,UAAU,GAAGP,KAAK,CAACO,UAAU;IAC7BC,QAAQ,GAAGR,KAAK,CAACS,IAAI;IACrBlB,KAAK,GAAGS,KAAK,CAACT,KAAK;IACnBmB,MAAM,GAAGV,KAAK,CAACU,MAAM;IACrBC,OAAO,GAAGX,KAAK,CAACW,OAAO;IACvBC,YAAY,GAAGZ,KAAK,CAACY,YAAY;IACjCC,WAAW,GAAGb,KAAK,CAACa,WAAW;IAC/BC,OAAO,GAAGd,KAAK,CAACc,OAAO;IACvBC,SAAS,GAAGf,KAAK,CAACe,SAAS;IAC3BC,WAAW,GAAGhB,KAAK,CAACgB,WAAW;IAC/BC,qBAAqB,GAAGjB,KAAK,CAACkB,mBAAmB;IACjDA,mBAAmB,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG9D,QAAQ,GAAG8D,qBAAqB;IACzFE,eAAe,GAAGnB,KAAK,CAACmB,eAAe;IACvCC,KAAK,GAAGtE,wBAAwB,CAACkD,KAAK,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAc,EAAE,aAAa,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,qBAAqB,EAAE,iBAAiB,CAAC,CAAC;EAEhR,IAAIqB,iBAAiB,GAAGtE,KAAK,CAACuE,UAAU,CAAC9D,eAAe,CAAC;IACrD+D,YAAY,GAAGF,iBAAiB,CAACG,KAAK;IACtCC,KAAK,GAAGJ,iBAAiB,CAACI,KAAK;IAC/BC,cAAc,GAAGL,iBAAiB,CAACK,cAAc;IACjDC,aAAa,GAAGN,iBAAiB,CAACM,aAAa;IAC/CC,aAAa,GAAGP,iBAAiB,CAACO,aAAa;IAC/CC,iBAAiB,GAAGR,iBAAiB,CAACQ,iBAAiB;IACvDC,qBAAqB,GAAGT,iBAAiB,CAACS,qBAAqB;IAC/DC,UAAU,GAAGV,iBAAiB,CAACU,UAAU;IACzCC,WAAW,GAAGX,iBAAiB,CAACW,WAAW;IAC3CC,cAAc,GAAGZ,iBAAiB,CAACY,cAAc;IACjDC,kBAAkB,GAAGb,iBAAiB,CAACa,kBAAkB;IACzDC,kBAAkB,GAAGd,iBAAiB,CAACc,kBAAkB;IACzDC,iBAAiB,GAAGf,iBAAiB,CAACe,iBAAiB;IACvDC,cAAc,GAAGhB,iBAAiB,CAACgB,cAAc;IACjDC,iBAAiB,GAAGjB,iBAAiB,CAACiB,iBAAiB;IACvDC,eAAe,GAAGlB,iBAAiB,CAACkB,eAAe;IACnDC,UAAU,GAAGnB,iBAAiB,CAACmB,UAAU;IACzCC,SAAS,GAAGpB,iBAAiB,CAACoB,SAAS;IACvCC,UAAU,GAAGrB,iBAAiB,CAACqB,UAAU;IACzCC,UAAU,GAAGtB,iBAAiB,CAACsB,UAAU;IACzCC,WAAW,GAAGvB,iBAAiB,CAACuB,WAAW;IAC3CC,SAAS,GAAGxB,iBAAiB,CAACwB,SAAS;IACvCC,YAAY,GAAGzB,iBAAiB,CAACyB,YAAY;IAC7CC,gBAAgB,GAAG1B,iBAAiB,CAAC0B,gBAAgB;IACrDC,qBAAqB,GAAG3B,iBAAiB,CAAC2B,qBAAqB;EAEnE,IAAIC,OAAO,GAAGlG,KAAK,CAACmG,MAAM,CAAC,IAAI,CAAC;EAChC,IAAIC,UAAU,GAAGpG,KAAK,CAACmG,MAAM,CAAC,IAAI,CAAC;EACnC,IAAIE,SAAS,GAAG7F,UAAU,CAAC0F,OAAO,EAAEhD,GAAG,CAAC;EACxC,IAAIQ,IAAI,GAAGD,QAAQ;EACnB,IAAI6C,UAAU,GAAGC,OAAO,CAACC,KAAK,CAACC,OAAO,CAACtD,QAAQ,CAAC,GAAGA,QAAQ,CAACN,MAAM,GAAGM,QAAQ,CAAC;EAC9E,IAAIzB,QAAQ,GAAG+D,UAAU,GAAGA,UAAU,CAAC9B,MAAM,CAAC,GAAG,KAAK;EACtD,IAAI+C,OAAO,GAAGhB,SAAS,GAAGA,SAAS,CAAC/B,MAAM,CAAC,GAAG,KAAK;EACnD,IAAIgD,QAAQ,GAAGf,UAAU,GAAGA,UAAU,CAACjC,MAAM,CAAC,GAAG,KAAK;EACtD,IAAIhC,QAAQ,GAAGgE,UAAU,GAAGA,UAAU,CAAChC,MAAM,CAAC,GAAG,KAAK;EACtD,IAAIc,KAAK,GAAGD,YAAY,IAAI,CAAC,CAAC;EAC9B,IAAI7D,KAAK,GAAGJ,QAAQ,EAAE;EAEtB,IAAI,CAACmD,IAAI,EAAE;IACT,IAAI4C,UAAU,EAAE;MACd,IAAI,CAAC5E,QAAQ,EAAE;QACbgC,IAAI,GAAGF,UAAU,IAAIiB,KAAK,CAACmC,iBAAiB;MAC9C,CAAC,MAAM;QACLlD,IAAI,GAAGJ,YAAY,IAAImB,KAAK,CAACoC,mBAAmB;MAClD;MAEA,IAAI,CAACnD,IAAI,EAAE;QACTA,IAAI,GAAGe,KAAK,CAACqC,iBAAiB;MAChC;IACF,CAAC,MAAM;MACLpD,IAAI,GAAGH,OAAO,IAAIkB,KAAK,CAACsC,cAAc;IACxC;EACF;EAEA,IAAIC,WAAW,GAAG,SAASA,WAAW,CAACC,KAAK,EAAE;IAC5C,IAAI,CAACP,OAAO,EAAE;MACZhC,KAAK,CAACf,MAAM,CAAC;IACf;IAEA,IAAIuD,QAAQ,GAAGrB,WAAW,KAAKoB,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACG,OAAO,IAAIH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;;IAElF,IAAIf,UAAU,IAAI,CAACW,KAAK,CAACK,gBAAgB,IAAI,EAAEJ,QAAQ,IAAIzB,UAAU,CAAC9B,MAAM,CAAC,CAAC,EAAE;MAC9E6B,eAAe,CAACyB,KAAK,EAAEtD,MAAM,CAAC;IAChC;IAEA,IAAIuD,QAAQ,EAAE;MACZ,IAAID,KAAK,CAACE,QAAQ,EAAE;QAClBlC,WAAW,CAACgC,KAAK,EAAE;UACjBM,GAAG,EAAE5D;QACP,CAAC,CAAC;MACJ,CAAC,MAAM;QACLqB,UAAU,CAACiC,KAAK,EAAEtD,MAAM,EAAE,IAAI,CAAC;MACjC;IACF,CAAC,MAAM;MACLqB,UAAU,CAACiC,KAAK,EAAEtD,MAAM,CAAC;IAC3B;IAEA,IAAIC,OAAO,EAAE;MACXA,OAAO,CAACqD,KAAK,CAAC;IAChB;EACF,CAAC;EAED,IAAIO,eAAe,GAAG,SAASA,eAAe,CAACP,KAAK,EAAE;IACpD,IAAIA,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACG,OAAO,IAAIH,KAAK,CAACI,OAAO,EAAE;MACpDJ,KAAK,CAACQ,cAAc,EAAE;IACxB;IAEA,IAAIxD,WAAW,EAAE;MACfA,WAAW,CAACgD,KAAK,CAAC;IACpB;EACF,CAAC;EAED,IAAIS,eAAe,GAAG,SAASA,eAAe,CAACT,KAAK,EAAE;IACpD,IAAIX,UAAU,EAAE;MACd,IAAI5E,QAAQ,EAAE;QACZmD,aAAa,CAAClB,MAAM,CAAC;MACvB,CAAC,MAAM;QACL6B,eAAe,CAACyB,KAAK,CAAC;MACxB;IACF;IAEA,OAAO,IAAI;EACb,CAAC;EAED,IAAIU,mBAAmB,GAAG,SAASA,mBAAmB,CAACV,KAAK,EAAE;IAC5D,IAAIvF,QAAQ,EAAE;MACZ8D,eAAe,CAACyB,KAAK,EAAEtD,MAAM,CAAC;MAC9B,OAAO,IAAI;IACb;IAEA,IAAIiE,MAAM,GAAG9B,SAAS,CAACnC,MAAM,CAAC;IAE9B,IAAIiE,MAAM,EAAE;MACVlD,KAAK,CAACkD,MAAM,CAAC;MACb,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAED,IAAIC,aAAa,GAAG,SAASA,aAAa,CAACZ,KAAK,EAAE;IAChD,IAAIa,IAAI,GAAG,KAAK;IAChB,IAAIC,GAAG,GAAGd,KAAK,CAACc,GAAG;IAEnB,IAAId,KAAK,CAACe,MAAM,IAAIf,KAAK,CAACgB,aAAa,KAAKhB,KAAK,CAACiB,MAAM,EAAE;MACxD;IACF;IAEA,IAAIC,WAAW,GAAGlB,KAAK,CAACG,OAAO,IAAIH,KAAK,CAACI,OAAO;IAEhD,QAAQU,GAAG;MACT,KAAK,GAAG;QACN,IAAI7B,OAAO,CAACkC,OAAO,KAAKnB,KAAK,CAACgB,aAAa,EAAE;UAC3C,IAAIpC,WAAW,IAAIoB,KAAK,CAACE,QAAQ,EAAE;YACjCW,IAAI,GAAG7C,WAAW,CAACgC,KAAK,EAAE;cACxBM,GAAG,EAAE5D;YACP,CAAC,CAAC;UACJ,CAAC,MAAM,IAAIkC,WAAW,EAAE;YACtBiC,IAAI,GAAG9C,UAAU,CAACiC,KAAK,EAAEtD,MAAM,EAAE,IAAI,CAAC;UACxC,CAAC,MAAM;YACLmE,IAAI,GAAG9C,UAAU,CAACiC,KAAK,EAAEtD,MAAM,CAAC;UAClC;QACF;QAEAsD,KAAK,CAACoB,eAAe,EAAE;QACvB;MAEF,KAAK,OAAO;QACV,IAAInC,OAAO,CAACkC,OAAO,KAAKnB,KAAK,CAACgB,aAAa,IAAI3B,UAAU,EAAE;UACzDd,eAAe,CAACyB,KAAK,CAAC;UACtBa,IAAI,GAAG,IAAI;QACb;QAEAb,KAAK,CAACoB,eAAe,EAAE;QACvB;MAEF,KAAK,WAAW;QACd,IAAIxC,WAAW,IAAIoB,KAAK,CAACE,QAAQ,EAAE;UACjCjC,cAAc,CAAC+B,KAAK,EAAEtD,MAAM,CAAC;QAC/B;QAEAkB,aAAa,CAAClB,MAAM,CAAC;QACrBmE,IAAI,GAAG,IAAI;QACX;MAEF,KAAK,SAAS;QACZ,IAAIjC,WAAW,IAAIoB,KAAK,CAACE,QAAQ,EAAE;UACjChC,kBAAkB,CAAC8B,KAAK,EAAEtD,MAAM,CAAC;QACnC;QAEAmB,iBAAiB,CAACnB,MAAM,CAAC;QACzBmE,IAAI,GAAG,IAAI;QACX;MAEF,KAAK,YAAY;QACf,IAAInH,KAAK,CAAC2H,SAAS,KAAK,KAAK,EAAE;UAC7BR,IAAI,GAAGH,mBAAmB,CAACV,KAAK,CAAC;QACnC,CAAC,MAAM;UACLa,IAAI,GAAGJ,eAAe,CAACT,KAAK,CAAC;QAC/B;QAEA;MAEF,KAAK,WAAW;QACd,IAAItG,KAAK,CAAC2H,SAAS,KAAK,KAAK,EAAE;UAC7BR,IAAI,GAAGJ,eAAe,CAACT,KAAK,CAAC;QAC/B,CAAC,MAAM;UACLa,IAAI,GAAGH,mBAAmB,CAACV,KAAK,CAAC;QACnC;QAEA;MAEF,KAAK,MAAM;QACT,IAAIpB,WAAW,IAAIsC,WAAW,IAAIlB,KAAK,CAACE,QAAQ,EAAE;UAChD/B,kBAAkB,CAAC6B,KAAK,EAAEtD,MAAM,CAAC;QACnC;QAEAgB,cAAc,EAAE;QAChBmD,IAAI,GAAG,IAAI;QACX;MAEF,KAAK,KAAK;QACR,IAAIjC,WAAW,IAAIsC,WAAW,IAAIlB,KAAK,CAACE,QAAQ,EAAE;UAChD9B,iBAAiB,CAAC4B,KAAK,EAAEtD,MAAM,CAAC;QAClC;QAEAiB,aAAa,EAAE;QACfkD,IAAI,GAAG,IAAI;QACX;MAEF;QACE,IAAIC,GAAG,KAAK,GAAG,EAAE;UACfxC,iBAAiB,CAAC0B,KAAK,EAAEtD,MAAM,CAAC;UAChCmE,IAAI,GAAG,IAAI;QACb,CAAC,MAAM,IAAIjC,WAAW,IAAIsC,WAAW,IAAIJ,GAAG,CAACQ,WAAW,EAAE,KAAK,GAAG,EAAE;UAClET,IAAI,GAAGxC,cAAc,CAAC2B,KAAK,CAAC;QAC9B,CAAC,MAAM,IAAI,CAACkB,WAAW,IAAI,CAAClB,KAAK,CAACE,QAAQ,IAAIxE,oBAAoB,CAACoF,GAAG,CAAC,EAAE;UACvEhD,qBAAqB,CAACpB,MAAM,EAAEoE,GAAG,CAAC;UAClCD,IAAI,GAAG,IAAI;QACb;IAAC;IAIL,IAAIA,IAAI,EAAE;MACRb,KAAK,CAACQ,cAAc,EAAE;MACtBR,KAAK,CAACoB,eAAe,EAAE;IACzB;IAEA,IAAIrE,SAAS,EAAE;MACbA,SAAS,CAACiD,KAAK,CAAC;IAClB;EACF,CAAC;EAED,IAAIuB,WAAW,GAAG,SAASA,WAAW,CAACvB,KAAK,EAAE;IAC5C,IAAI,CAACP,OAAO,IAAIO,KAAK,CAACgB,aAAa,KAAKhB,KAAK,CAACiB,MAAM,EAAE;MACpDxD,KAAK,CAACf,MAAM,CAAC;IACf;IAEA,IAAII,OAAO,EAAE;MACXA,OAAO,CAACkD,KAAK,CAAC;IAChB;EACF,CAAC;EAEDjH,KAAK,CAACyI,SAAS,CAAC,YAAY;IAC1B,IAAIzC,gBAAgB,EAAE;MACpB,IAAI0C,QAAQ,GAAG,EAAE;MACjB1I,KAAK,CAAC2I,QAAQ,CAACC,OAAO,CAACzF,QAAQ,EAAE,UAAU0F,KAAK,EAAE;QAChD,KAAK,aAAa7I,KAAK,CAAC8I,cAAc,CAACD,KAAK,CAAC,IAAIA,KAAK,CAAC5F,KAAK,CAACU,MAAM,EAAE;UACnE+E,QAAQ,CAACK,IAAI,CAACF,KAAK,CAAC5F,KAAK,CAACU,MAAM,CAAC;QACnC;MACF,CAAC,CAAC;MACFqC,gBAAgB,CAACrC,MAAM,EAAE+E,QAAQ,CAAC;IACpC;EACF,CAAC,EAAE,CAACvF,QAAQ,EAAEQ,MAAM,EAAEqC,gBAAgB,CAAC,CAAC;EACxChG,KAAK,CAACyI,SAAS,CAAC,YAAY;IAC1B,IAAIxC,qBAAqB,EAAE;MACzB,OAAO,YAAY;QACjBA,qBAAqB,CAACtC,MAAM,CAAC;MAC/B,CAAC;IACH;IAEA,OAAOqF,SAAS;EAClB,CAAC,EAAE,CAACrF,MAAM,EAAEsC,qBAAqB,CAAC,CAAC;EACnCjG,KAAK,CAACyI,SAAS,CAAC,YAAY;IAC1B,IAAI1C,YAAY,IAAIvD,KAAK,EAAE;MACzBuD,YAAY,CAACpC,MAAM,EAAEyC,UAAU,CAACgC,OAAO,CAACa,WAAW,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACX,WAAW,EAAE,CAAC;IACpF;EACF,CAAC,EAAE,CAACxC,YAAY,EAAEpC,MAAM,EAAEnB,KAAK,CAAC,CAAC;EACjCxC,KAAK,CAACyI,SAAS,CAAC,YAAY;IAC1B,IAAI/B,OAAO,EAAE;MACXR,OAAO,CAACkC,OAAO,CAAC1D,KAAK,EAAE;IACzB;EACF,CAAC,EAAE,CAACgC,OAAO,CAAC,CAAC;EACb,IAAIyC,YAAY;EAEhB,IAAItD,WAAW,EAAE;IACfsD,YAAY,GAAGxH,QAAQ;EACzB,CAAC,MAAM,IAAIA,QAAQ,EAAE;IACnB;IACAwH,YAAY,GAAG,IAAI;EACrB;EAEA,OAAO,aAAanJ,KAAK,CAACoJ,aAAa,CAAC,IAAI,EAAEtJ,QAAQ,CAAC;IACrDuD,SAAS,EAAEpD,IAAI,CAACmD,OAAO,CAACxC,IAAI,EAAEyC,SAAS,EAAE3B,QAAQ,IAAI0B,OAAO,CAAC1B,QAAQ,EAAEC,QAAQ,IAAIyB,OAAO,CAACzB,QAAQ,CAAC;IACpG0H,IAAI,EAAE,UAAU;IAChBrF,SAAS,EAAE6D,aAAa;IACxB9D,OAAO,EAAEyE,WAAW;IACpB,eAAe,EAAElC,UAAU,GAAG5E,QAAQ,GAAG,IAAI;IAC7C,eAAe,EAAEyH,YAAY;IAC7BjG,GAAG,EAAEmD,SAAS;IACdiD,QAAQ,EAAE3C,QAAQ,GAAG,CAAC,GAAG,CAAC;EAC5B,CAAC,EAAEtC,KAAK,CAAC,EAAE,aAAarE,KAAK,CAACoJ,aAAa,CAAC,KAAK,EAAE;IACjD/F,SAAS,EAAED,OAAO,CAACtB,OAAO;IAC1B8B,OAAO,EAAEoD,WAAW;IACpB/C,WAAW,EAAEuD,eAAe;IAC5BtE,GAAG,EAAEkD;EACP,CAAC,EAAE,aAAapG,KAAK,CAACoJ,aAAa,CAAC,KAAK,EAAE;IACzCxF,OAAO,EAAEE,WAAW;IACpBT,SAAS,EAAED,OAAO,CAACjB;EACrB,CAAC,EAAEuB,IAAI,CAAC,EAAE,aAAa1D,KAAK,CAACoJ,aAAa,CAACjJ,UAAU,EAAE;IACrDyD,OAAO,EAAEC,YAAY;IACrB0F,SAAS,EAAE,KAAK;IAChBlG,SAAS,EAAED,OAAO,CAACZ;EACrB,CAAC,EAAEA,KAAK,CAAC,CAAC,EAAEW,QAAQ,IAAI,aAAanD,KAAK,CAACoJ,aAAa,CAACjF,mBAAmB,EAAErE,QAAQ,CAAC;IACrF0J,aAAa,EAAE,IAAI;IACnBnG,SAAS,EAAED,OAAO,CAACxB,KAAK;IACxB6H,EAAE,EAAE/H,QAAQ;IACZ6H,SAAS,EAAE,IAAI;IACfF,IAAI,EAAE;EACR,CAAC,EAAEjF,eAAe,CAAC,EAAEjB,QAAQ,CAAC,CAAC;AACjC,CAAC,CAAC;AACFuG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG7G,QAAQ,CAAC8G,SAAS,GAAG;EAC3D;EACA;EACA;EACA;;EAEA;AACF;AACA;EACE1G,QAAQ,EAAEjD,SAAS,CAAC4J,IAAI;EAExB;AACF;AACA;AACA;EACE1G,OAAO,EAAElD,SAAS,CAAC6J,MAAM;EAEzB;AACF;AACA;EACE1G,SAAS,EAAEnD,SAAS,CAAC8J,MAAM;EAE3B;AACF;AACA;EACE1G,YAAY,EAAEpD,SAAS,CAAC4J,IAAI;EAE5B;AACF;AACA;EACEvG,OAAO,EAAErD,SAAS,CAAC4J,IAAI;EAEvB;AACF;AACA;EACEtG,UAAU,EAAEtD,SAAS,CAAC4J,IAAI;EAE1B;AACF;AACA;EACEpG,IAAI,EAAExD,SAAS,CAAC4J,IAAI;EAEpB;AACF;AACA;EACEtH,KAAK,EAAEtC,SAAS,CAAC4J,IAAI;EAErB;AACF;AACA;EACEnG,MAAM,EAAEzD,SAAS,CAAC8J,MAAM,CAACC,UAAU;EAEnC;AACF;AACA;EACErG,OAAO,EAAE1D,SAAS,CAACgK,IAAI;EAEvB;AACF;AACA;EACEnG,OAAO,EAAE7D,SAAS,CAACgK,IAAI;EAEvB;AACF;AACA;EACEpG,WAAW,EAAE5D,SAAS,CAACgK,IAAI;EAE3B;AACF;AACA;EACElG,SAAS,EAAE9D,SAAS,CAACgK,IAAI;EAEzB;AACF;AACA;EACErG,YAAY,EAAE3D,SAAS,CAACgK,IAAI;EAE5B;AACF;AACA;EACEjG,WAAW,EAAE/D,SAAS,CAACgK,IAAI;EAE3B;AACF;AACA;AACA;EACE/F,mBAAmB,EAAEjE,SAAS,CAACiK,WAAW;EAE1C;AACF;AACA;EACE/F,eAAe,EAAElE,SAAS,CAAC6J;AAC7B,CAAC,GAAG,KAAK,CAAC;AACV,eAAezJ,UAAU,CAACI,MAAM,EAAE;EAChC0J,IAAI,EAAE;AACR,CAAC,CAAC,CAACrH,QAAQ,CAAC"},"metadata":{},"sourceType":"module"}