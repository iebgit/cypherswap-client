{"ast":null,"code":"import { BigNumber } from \"@ethersproject/bignumber\";\nconst NegativeOne = /*#__PURE__*/BigNumber.from(-1);\nconst Zero = /*#__PURE__*/BigNumber.from(0);\nconst One = /*#__PURE__*/BigNumber.from(1);\nconst Two = /*#__PURE__*/BigNumber.from(2);\nconst WeiPerEther = /*#__PURE__*/BigNumber.from(\"1000000000000000000\");\nconst MaxUint256 = /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nconst MinInt256 = /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\");\nconst MaxInt256 = /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256 };","map":{"version":3,"sources":["../src.ts/bignumbers.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,QAAQ,0BAA0B;AAEpD,MAAM,WAAW,GAAe,aAAa,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAE;AAChE,MAAM,IAAI,GAAe,aAAa,SAAS,CAAC,IAAI,CAAC,CAAC,CAAE;AACxD,MAAM,GAAG,GAAe,aAAa,SAAS,CAAC,IAAI,CAAC,CAAC,CAAE;AACvD,MAAM,GAAG,GAAe,aAAa,SAAS,CAAC,IAAI,CAAC,CAAC,CAAE;AACvD,MAAM,WAAW,GAAe,aAAa,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAE;AACnF,MAAM,UAAU,GAAe,aAAa,SAAS,CAAC,IAAI,CAAC,oEAAoE,CAAE;AAEjI,MAAM,SAAS,GAAe,aAAa,SAAS,CAAC,IAAI,CAAC,qEAAqE,CAAE;AACjI,MAAM,SAAS,GAAe,aAAa,SAAS,CAAC,IAAI,CAAC,oEAAoE,CAAE;AAEhI,SACI,WAAW,EACX,IAAI,EACJ,GAAG,EACH,GAAG,EACH,WAAW,EACX,UAAU,EACV,SAAS,EACT,SAAS","sourceRoot":"","sourcesContent":["import { BigNumber } from \"@ethersproject/bignumber\";\nconst NegativeOne = ( /*#__PURE__*/BigNumber.from(-1));\nconst Zero = ( /*#__PURE__*/BigNumber.from(0));\nconst One = ( /*#__PURE__*/BigNumber.from(1));\nconst Two = ( /*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther = ( /*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256 = ( /*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nconst MinInt256 = ( /*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256 = ( /*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\nexport { NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256, MinInt256, MaxInt256, };\n//# sourceMappingURL=bignumbers.js.map"]},"metadata":{},"sourceType":"module"}