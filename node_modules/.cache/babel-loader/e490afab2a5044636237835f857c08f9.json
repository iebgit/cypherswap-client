{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nimport TreeViewContext from './TreeViewContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n  return false;\n}\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n  return -1;\n};\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n    classes = props.classes,\n    className = props.className,\n    defaultCollapseIcon = props.defaultCollapseIcon,\n    defaultEndIcon = props.defaultEndIcon,\n    _props$defaultExpande = props.defaultExpanded,\n    defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n    defaultExpandIcon = props.defaultExpandIcon,\n    defaultParentIcon = props.defaultParentIcon,\n    _props$defaultSelecte = props.defaultSelected,\n    defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n    _props$disableSelecti = props.disableSelection,\n    disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n    _props$multiSelect = props.multiSelect,\n    multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n    expandedProp = props.expanded,\n    onNodeSelect = props.onNodeSelect,\n    onNodeToggle = props.onNodeToggle,\n    selectedProp = props.selected,\n    other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n  var _React$useState = React.useState(null),\n    tabbable = _React$useState[0],\n    setTabbable = _React$useState[1];\n  var _React$useState2 = React.useState(null),\n    focusedNodeId = _React$useState2[0],\n    setFocusedNodeId = _React$useState2[1];\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n  var _useControlled = useControlled({\n      controlled: expandedProp,\n      default: defaultExpanded,\n      name: 'TreeView',\n      state: 'expanded'\n    }),\n    _useControlled2 = _slicedToArray(_useControlled, 2),\n    expanded = _useControlled2[0],\n    setExpandedState = _useControlled2[1];\n  var _useControlled3 = useControlled({\n      controlled: selectedProp,\n      default: defaultSelected,\n      name: 'TreeView',\n      state: 'selected'\n    }),\n    _useControlled4 = _slicedToArray(_useControlled3, 2),\n    selected = _useControlled4[0],\n    setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n    return null;\n  };\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n    return null;\n  };\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n    setExpandedState(newExpanded);\n  };\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n    var newExpanded = expanded.concat(diff);\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n      next = nodes.next,\n      current = nodes.current;\n    if (!next || !current) {\n      return;\n    }\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n    setSelectedState(base);\n  };\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n      end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n    setSelectedState(newSelected);\n  };\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n    setSelectedState(newSelected);\n  };\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n    setSelectedState(newSelected);\n  };\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n    return false;\n  };\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n      start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n      end = nodes.end,\n      current = nodes.current;\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n    if (map) {\n      nodes.push(id);\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n    var newMap = _extends({}, nodeMap.current);\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n  var prevChildIds = React.useRef([]);\n  var _React$useState3 = React.useState(false),\n    childrenCalculated = _React$useState3[0],\n    setChildrenCalculated = _React$useState3[1];\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n      return list;\n    };\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","map":{"version":3,"names":["_extends","_slicedToArray","_objectWithoutProperties","React","clsx","PropTypes","withStyles","useControlled","TreeViewContext","styles","root","padding","margin","listStyle","arrayDiff","arr1","arr2","length","i","findNextFirstChar","firstChars","startIndex","char","defaultExpandedDefault","defaultSelectedDefault","TreeView","forwardRef","props","ref","children","classes","className","defaultCollapseIcon","defaultEndIcon","_props$defaultExpande","defaultExpanded","defaultExpandIcon","defaultParentIcon","_props$defaultSelecte","defaultSelected","_props$disableSelecti","disableSelection","_props$multiSelect","multiSelect","expandedProp","expanded","onNodeSelect","onNodeToggle","selectedProp","selected","other","_React$useState","useState","tabbable","setTabbable","_React$useState2","focusedNodeId","setFocusedNodeId","nodeMap","useRef","firstCharMap","visibleNodes","_useControlled","controlled","default","name","state","_useControlled2","setExpandedState","_useControlled3","_useControlled4","setSelectedState","isExpanded","useCallback","id","Array","isArray","indexOf","isSelected","isTabbable","isFocused","getNextNode","nodeIndex","current","getPreviousNode","getLastNode","getFirstNode","getParent","parent","getNodesInRange","a","b","aIndex","bIndex","start","Math","min","end","max","slice","focus","focusNextNode","focusPreviousNode","focusFirstNode","focusLastNode","focusByFirstCharacter","index","lowercaseChar","toLowerCase","firstCharIds","Object","keys","forEach","nodeId","firstChar","map","visible","push","toggleExpansion","event","value","arguments","undefined","newExpanded","filter","oldTabbable","concat","expandAllSiblings","diff","child","topLevelNodes","node","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","nodes","base","next","handleRangeSelect","range","newSelected","handleMultipleSelect","handleSingleSelect","selectNode","multiple","selectRange","stacked","_nodes$start","rangeSelectToFirst","rangeSelectToLast","selectNextNode","selectPreviousNode","selectAllNodes","addNodeToNodeMap","childrenIds","currentMap","childId","currentChildMap","getNodesToRemove","cleanUpFirstCharMap","newMap","removeNodeFromNodeMap","parentMap","parentChildren","c","oldFocusedNodeId","mapFirstChar","prevChildIds","_React$useState3","childrenCalculated","setChildrenCalculated","useEffect","childIds","Children","isValidElement","buildVisible","list","item","childs","noopSelection","createElement","Provider","icons","role","process","env","NODE_ENV","propTypes","object","string","arrayOf","oneOfType","bool","func"],"sources":["/Users/Ibis/Projects/project_mern_memories/client/node_modules/@material-ui/lab/esm/TreeView/TreeView.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nimport TreeViewContext from './TreeViewContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = /*#__PURE__*/React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(expanded);\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = expanded.concat(diff);\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(selected);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends({}, currentMap, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends({}, currentChildMap, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.concat(map.children);\n        map.children.forEach(function (node) {\n          nodes.concat(getNodesToRemove(node));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends({}, parentMap, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if ( /*#__PURE__*/React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);"],"mappings":"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"},"metadata":{},"sourceType":"module"}