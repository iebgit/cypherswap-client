{"ast":null,"code":"import React from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nvar debounce = function debounce(fn, time) {\n  var timeout = void 0;\n  return function () {\n    var _this = this,\n      _arguments = arguments;\n    var functionCall = function functionCall() {\n      return fn.apply(_this, _arguments);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(functionCall, time);\n  };\n};\n\n// https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id#6860916\n\nvar guidGenerator = function () {\n  var S4 = function S4() {\n    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  };\n  return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4();\n};\nfunction getHighest(elements) {\n  var highest = 0;\n  elements.forEach(function (el) {\n    if (el.rect && el.rect.height > highest) {\n      highest = el.rect.height;\n    }\n  });\n  return highest;\n}\nfunction nextTriggerOnMount(_ref) {\n  var rect = _ref.rect,\n    mode = _ref.mode,\n    prevOffset = _ref.prevOffset,\n    position = _ref.position,\n    direction = _ref.direction,\n    width = _ref.width;\n  if (mode !== 'chain') return false;\n  switch (direction) {\n    case 'toRight':\n      return position.from > 0;\n    case 'toLeft':\n    default:\n      return rect.width + position.from <= width;\n  }\n}\nfunction getFromOffset(_ref) {\n  var rect = _ref.rect,\n    offset = _ref.offset,\n    direction = _ref.direction;\n  switch (direction) {\n    case 'toRight':\n      return offset - rect.width;\n    case 'toLeft':\n    default:\n      return offset;\n  }\n}\nfunction getFrom(_ref2) {\n  var index = _ref2.index,\n    rect = _ref2.rect,\n    offset = _ref2.offset,\n    width = _ref2.width,\n    direction = _ref2.direction;\n  if (index === 0) return offset;\n  if (typeof offset === 'number') {\n    return getFromOffset({\n      rect: rect,\n      offset: offset,\n      direction: direction\n    });\n  }\n  switch (direction) {\n    case 'toRight':\n      return -rect.width;\n    case 'toLeft':\n    default:\n      return width;\n  }\n}\nfunction getTo(_ref3) {\n  var rect = _ref3.rect,\n    width = _ref3.width,\n    direction = _ref3.direction;\n  switch (direction) {\n    case 'toRight':\n      return width;\n    case 'toLeft':\n    default:\n      return -rect.width;\n  }\n}\nfunction getNext(_ref4) {\n  var mode = _ref4.mode,\n    from = _ref4.from,\n    direction = _ref4.direction,\n    rect = _ref4.rect,\n    width = _ref4.width;\n  var start = from || 0;\n  switch (mode) {\n    case 'await':\n      switch (direction) {\n        case 'toRight':\n          return width;\n        case 'toLeft':\n        default:\n          return -rect.width;\n      }\n    case 'smooth':\n      switch (direction) {\n        case 'toRight':\n          return rect.width > width ? 0 : width - rect.width;\n        case 'toLeft':\n        default:\n          return rect.width > width ? width - rect.width : 0;\n      }\n    case 'chain':\n    default:\n      switch (direction) {\n        case 'toRight':\n          return 0;\n        case 'toLeft':\n        default:\n          return rect.width + start > width ? width - rect.width : width - rect.left - rect.width;\n      }\n  }\n}\nvar getPosition = function (_ref5) {\n  var mode = _ref5.mode,\n    index = _ref5.index,\n    rect = _ref5.rect,\n    offset = _ref5.offset,\n    width = _ref5.width,\n    direction = _ref5.direction;\n  var from = getFrom({\n    index: index,\n    rect: rect,\n    offset: offset,\n    width: width,\n    direction: direction\n  });\n  var to = getTo({\n    rect: rect,\n    width: width,\n    direction: direction\n  });\n  return {\n    from: from,\n    to: to,\n    next: getNext({\n      mode: mode,\n      from: from,\n      direction: direction,\n      rect: rect,\n      width: width\n    })\n  };\n};\nfunction getNextOffset(_ref) {\n  var from = _ref.from,\n    rect = _ref.rect,\n    direction = _ref.direction;\n  switch (direction) {\n    case 'toRight':\n      {\n        return from;\n      }\n    case 'toLeft':\n    default:\n      {\n        return from + rect.width;\n      }\n  }\n}\nfunction getStartOffset(_ref) {\n  var offset = _ref.offset,\n    rect = _ref.rect,\n    direction = _ref.direction,\n    width = _ref.width;\n  if (offset === 'run-in') {\n    switch (direction) {\n      case 'toRight':\n        return -rect.width;\n      case 'toLeft':\n      default:\n        return width;\n    }\n  }\n  if (typeof offset === 'string') {\n    var offsetRelative = Number(offset.replace('%', ''));\n    if (offsetRelative) return width / 100 * offsetRelative;\n  }\n  return offset;\n}\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\nvar TickerElement = function (_React$Component) {\n  inherits(TickerElement, _React$Component);\n  function TickerElement() {\n    var _ref;\n    var _temp, _this, _ret;\n    classCallCheck(this, TickerElement);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TickerElement.__proto__ || Object.getPrototypeOf(TickerElement)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      children: _this.props.children({\n        index: _this.props.index\n      }),\n      move: _this.props.move,\n      position: {\n        from: undefined,\n        to: undefined,\n        next: undefined\n      },\n      offset: _this.props.offset,\n      rect: null\n    }, _this.x = 0, _this.isMoving = false, _this.nextTriggered = false, _this.elementRef = React.createRef(), _this.raf = null, _this.componentDidMount = function () {\n      _this.setPosition(true);\n      _this.observer = new MutationObserver(_this.onMutation);\n      _this.observer.observe(_this.elementRef.current, {\n        characterData: true,\n        childList: true,\n        subtree: true\n      });\n    }, _this.componentWillUnmount = function () {\n      _this.observer.disconnect();\n    }, _this.onMutation = function () {\n      _this.setPosition();\n    }, _this.componentDidUpdate = function (prevProps, prevState) {\n      if (!_this.x && prevState.position.from !== _this.state.position.from) {\n        _this.x = _this.state.position.from;\n        _this.elementRef.current.style.transform = 'translate3d(' + _this.x + 'px, 0, 0)';\n      }\n      if (_this.x !== _this.state.position.from && prevProps.prevRect && _this.props.prevRect && prevProps.prevRect.width !== _this.props.prevRect.width) {\n        if (_this.props.offset) {\n          _this.x = _this.x + (_this.props.offset - prevProps.offset);\n        } else {\n          _this.x = _this.x + (_this.props.prevRect.width - prevProps.prevRect.width);\n        }\n        _this.elementRef.current.style.transform = 'translate3d(' + _this.x + 'px, 0, 0)';\n      }\n      if (_this.props.move && !prevProps.start && _this.props.start) {\n        _this.animate();\n      }\n      if (_this.props.start && !prevProps.move && _this.props.move) {\n        _this.animate();\n      }\n      if (prevProps.move && !_this.props.move) {\n        _this.isMoving = false;\n        window.cancelAnimationFrame(_this.raf);\n      }\n    }, _this.setPosition = function (isMount) {\n      var _this$props = _this.props,\n        mode = _this$props.mode,\n        width = _this$props.width,\n        id = _this$props.id,\n        onNext = _this$props.onNext,\n        direction = _this$props.direction,\n        index = _this$props.index,\n        setRect = _this$props.setRect;\n      var rect = _this.elementRef.current.getBoundingClientRect();\n      if (rect.width === 0) return;\n      var offset = _this.props.index === 0 ? getStartOffset({\n        offset: _this.props.offset,\n        rect: rect,\n        direction: direction,\n        width: width\n      }) : _this.props.offset;\n      var position = getPosition({\n        mode: mode,\n        rect: rect,\n        index: index,\n        offset: offset,\n        width: width,\n        direction: direction\n      });\n      setRect({\n        index: _this.props.index,\n        rect: rect,\n        offset: offset,\n        nextOffset: getNextOffset({\n          from: position.from,\n          rect: rect,\n          direction: direction\n        })\n      });\n      if (isMount) {\n        var nextTriggerOnMount$$1 = nextTriggerOnMount({\n          mode: mode,\n          rect: rect,\n          position: position,\n          offset: offset,\n          direction: direction,\n          width: width\n        });\n        if (nextTriggerOnMount$$1) {\n          onNext({\n            id: id,\n            index: index,\n            rect: rect,\n            nextOffset: getNextOffset({\n              from: position.from,\n              rect: rect,\n              direction: direction\n            })\n          });\n        }\n        if (!nextTriggerOnMount$$1 && (offset || index === 0)) {\n          onNext({\n            id: id,\n            index: index,\n            rect: rect\n          });\n        }\n        _this.nextTriggered = nextTriggerOnMount$$1;\n      }\n      _this.setState({\n        rect: rect,\n        offset: offset,\n        position: position\n      });\n    }, _this.shouldTriggerNext = function () {\n      if (_this.nextTriggered) return false;\n      return _this.props.direction === 'toLeft' ? _this.x <= _this.state.position.next : _this.x >= _this.state.position.next;\n    }, _this.triggerNext = function () {\n      if (_this.shouldTriggerNext()) {\n        // if (this.props.index === 5) console.log(this.x)\n        _this.nextTriggered = true;\n        _this.props.onNext({\n          id: _this.props.id,\n          index: _this.props.index,\n          rect: _this.state.rect\n        });\n      }\n    }, _this.shouldFinish = function () {\n      switch (_this.props.direction) {\n        case 'toRight':\n          return _this.x >= _this.state.position.to;\n        case 'toLeft':\n        default:\n          return _this.x <= _this.state.position.to;\n      }\n    }, _this.animate = function () {\n      if (_this.isMoving) return;\n      _this.isMoving = true;\n      var prevTimestamp = null;\n      var step = function step(timestamp) {\n        if (!_this.isMoving) return;\n        if (!_this.elementRef.current) return;\n        var progress = prevTimestamp ? timestamp - prevTimestamp : 0;\n        _this.x = _this.props.direction === 'toLeft' ? _this.x - progress / 100 * _this.props.speed : _this.x + progress / 100 * _this.props.speed;\n        _this.elementRef.current.style.transform = 'translate3d(' + _this.x + 'px, 0, 0)';\n        _this.triggerNext();\n        if (_this.shouldFinish()) {\n          _this.isMoving = false;\n          prevTimestamp = null;\n          _this.props.onFinish(_this.props.id);\n        } else {\n          prevTimestamp = timestamp;\n          _this.raf = window.requestAnimationFrame(step);\n        }\n      };\n      _this.raf = window.requestAnimationFrame(step);\n    }, _this.render = function () {\n      return React.createElement('div', {\n        className: 'ticker__element',\n        style: {\n          willChange: 'transform',\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          transform: 'translate3d(' + _this.x + 'px, 0, 0)'\n        },\n        ref: _this.elementRef\n      }, _this.state.children);\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n  return TickerElement;\n}(React.Component);\nTickerElement.propTypes = {\n  children: oneOfType([node, func]).isRequired,\n  direction: string.isRequired,\n  speed: number.isRequired,\n  id: string.isRequired,\n  index: number.isRequired,\n  mode: string.isRequired,\n  move: bool.isRequired,\n  onNext: func.isRequired,\n  onFinish: func.isRequired,\n  setRect: func.isRequired,\n  start: bool.isRequired,\n  offset: oneOfType([number, string]),\n  prevRect: object,\n  width: number\n};\nTickerElement.defaultProps = {\n  offset: undefined,\n  width: undefined,\n  prevRect: null\n};\nvar getDefaultState = function getDefaultState(offset, width) {\n  return {\n    elements: [{\n      id: guidGenerator(),\n      index: 0,\n      height: 0,\n      start: false,\n      offset: offset,\n      rect: null,\n      prevRect: null\n    }],\n    width: width,\n    height: 0\n  };\n};\nvar Ticker = function (_React$Component) {\n  inherits(Ticker, _React$Component);\n  function Ticker() {\n    var _ref;\n    var _temp, _this, _ret;\n    classCallCheck(this, Ticker);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Ticker.__proto__ || Object.getPrototypeOf(Ticker)).call.apply(_ref, [this].concat(args))), _this), _this.next = null, _this.state = getDefaultState(_this.props.offset), _this.tickerRef = React.createRef(), _this.dOnResize = debounce(function () {\n      return _this.onResize();\n    }, 150), _this.componentDidMount = function () {\n      _this.setState({\n        width: _this.tickerRef.current.offsetWidth,\n        height: _this.props.height\n      });\n      window.addEventListener('resize', _this.dOnResize);\n    }, _this.componentWillUnmount = function () {\n      window.removeEventListener('resize', _this.dOnResize);\n    }, _this.setRect = function (_ref2) {\n      var index = _ref2.index,\n        rect = _ref2.rect,\n        offset = _ref2.offset,\n        nextOffset = _ref2.nextOffset;\n      _this.setState(function (prevState) {\n        var elements = prevState.elements.map(function (el) {\n          var newEl = el;\n          if (el.index === index) newEl.rect = rect;\n          // next element\n          if (el.index === index + 1) {\n            newEl.prevRect = rect;\n            if (newEl.offset) {\n              newEl.offset = nextOffset;\n            }\n          }\n          return newEl;\n        });\n        return {\n          elements: elements,\n          height: _this.props.height ? prevState.height : getHighest(elements)\n        };\n      });\n    }, _this.onResize = function () {\n      if (!_this.tickerRef.current || _this.tickerRef.current.offsetWidth === _this.state.width) return;\n      _this.setState(_extends({}, getDefaultState(_this.props.offset, _this.tickerRef.current.offsetWidth), {\n        height: _this.props.height\n      }));\n    }, _this.onFinish = function (id) {\n      _this.props.onFinish();\n      _this.setState(function (prevState) {\n        return {\n          elements: prevState.elements.filter(function (el) {\n            return el.id !== id;\n          })\n        };\n      });\n    }, _this.onNext = function (_ref3) {\n      var id = _ref3.id,\n        index = _ref3.index,\n        rect = _ref3.rect,\n        nextOffset = _ref3.nextOffset;\n      _this.props.onNext(index);\n      _this.setState(function (prevState) {\n        return {\n          elements: [].concat(toConsumableArray(prevState.elements.map(function (el) {\n            var newEl = el;\n            if (el.index === index) newEl.rect = rect;\n            if (el.index === 0 || el.offset || newEl.index === index + 1) {\n              newEl.start = true;\n            }\n            return newEl;\n            // create new element\n          })), [{\n            id: guidGenerator(),\n            index: prevState.elements[prevState.elements.length - 1].index + 1,\n            height: 0,\n            start: false,\n            offset: nextOffset,\n            rect: null,\n            prevRect: rect\n          }])\n        };\n      });\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n  createClass(Ticker, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n      return React.createElement('div', {\n        className: 'ticker',\n        ref: this.tickerRef,\n        style: {\n          position: 'relative',\n          overflow: 'hidden',\n          height: this.state.height && this.state.height + 'px'\n        }\n      }, this.state.width && this.state.elements.map(function (el) {\n        return React.createElement(TickerElement, {\n          key: el.id,\n          id: el.id,\n          index: el.index,\n          start: el.start,\n          offset: el.offset,\n          prevRect: el.prevRect,\n          direction: _this2.props.direction,\n          mode: _this2.props.mode,\n          move: _this2.props.move,\n          speed: _this2.props.speed,\n          onFinish: _this2.onFinish,\n          onNext: _this2.onNext,\n          setRect: _this2.setRect,\n          width: _this2.state.width\n        }, _this2.props.children);\n      }));\n    }\n  }]);\n  return Ticker;\n}(React.Component);\nTicker.propTypes = {\n  children: oneOfType([node, func]).isRequired,\n  direction: string,\n  mode: string,\n  move: bool,\n  offset: oneOfType([number, string]),\n  speed: number,\n  height: oneOfType([number, string]),\n  onNext: func,\n  onFinish: func\n};\nTicker.defaultProps = {\n  offset: 0,\n  speed: 5,\n  direction: 'toLeft',\n  mode: 'chain',\n  move: true,\n  height: undefined,\n  onNext: function onNext() {},\n  onFinish: function onFinish() {}\n};\nexport default Ticker;","map":{"version":3,"sources":["../src/utils/debounce.js","../src/utils/guidGenerator.js","../src/utils/getHighest.js","../src/utils/shouldNextTriggerOnMount.js","../src/utils/getPosition.js","../src/utils/getNextOffset.js","../src/utils/getStartOffset.js","../src/Element.js","../src/utils/getDefaultState.js","../src/index.js"],"names":["debounce","fn","time","timeout","functionCall","apply","arguments","setTimeout","S4","Math","random","toString","substring","getHighest","elements","highest","forEach","el","rect","height","nextTriggerOnMount","mode","prevOffset","position","direction","width","from","getFromOffset","offset","getFrom","index","getTo","getNext","start","left","to","getNextOffset","getStartOffset","offsetRelative","Number","replace","TickerElement","React","Component","propTypes","oneOfType","node","func","isRequired","string","number","bool","object","defaultProps","undefined","state","props","children","move","next","x","isMoving","nextTriggered","elementRef","createRef","raf","componentDidMount","setPosition","observer","MutationObserver","onMutation","observe","current","characterData","childList","subtree","componentWillUnmount","disconnect","componentDidUpdate","prevProps","prevState","style","transform","prevRect","animate","cancelAnimationFrame","isMount","id","onNext","setRect","getBoundingClientRect","getPosition","shouldNextTriggerOnMount","setState","shouldTriggerNext","triggerNext","shouldFinish","prevTimestamp","step","timestamp","progress","speed","onFinish","window","requestAnimationFrame","render","getDefaultState","guidGenerator","Ticker","tickerRef","dOnResize","onResize","offsetWidth","addEventListener","removeEventListener","nextOffset","map","newEl","filter","length"],"mappings":"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","sourcesContent":["const debounce = (fn, time) => {\n  let timeout\n\n  return function () {\n    const functionCall = () => fn.apply(this, arguments)\n\n    clearTimeout(timeout)\n    timeout = setTimeout(functionCall, time)\n  }\n}\n\nexport default debounce\n","// https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id#6860916\n\nexport default () => {\n  const S4 = () => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4())\n}\n","export default function getHighest(elements) {\n  let highest = 0\n  elements.forEach(el => {\n    if (el.rect && el.rect.height > highest) {\n      highest = el.rect.height\n    }\n  })\n  return highest\n}\n","export default function nextTriggerOnMount({ rect, mode, prevOffset, position, direction, width }) {\n  if (mode !== 'chain') return false\n  switch (direction) {\n    case 'toRight':\n      return position.from > 0\n    case 'toLeft':\n    default:\n      return rect.width + position.from <= width\n  }\n}\n","function getFromOffset({ rect, offset, direction }) {\n  switch (direction) {\n    case 'toRight':\n      return offset - rect.width\n    case 'toLeft':\n    default:\n      return offset\n  }\n}\n\nfunction getFrom({ index, rect, offset, width, direction }) {\n  if (index === 0) return offset\n\n  if (typeof offset === 'number') {\n    return getFromOffset({ rect, offset, direction })\n  }\n\n  switch (direction) {\n    case 'toRight':\n      return -rect.width\n    case 'toLeft':\n    default:\n      return width\n  }\n}\n\nfunction getTo({ rect, width, direction }) {\n  switch (direction) {\n    case 'toRight':\n      return width\n    case 'toLeft':\n    default:\n      return -rect.width\n  }\n}\n\nfunction getNext({ mode, from, direction, rect, width }) {\n  const start = from || 0\n\n  switch (mode) {\n    case 'await':\n      switch (direction) {\n        case 'toRight':\n          return width\n        case 'toLeft':\n        default:\n          return -rect.width\n      }\n    case 'smooth':\n      switch (direction) {\n        case 'toRight':\n          return rect.width > width\n            ? 0\n            : width - rect.width\n        case 'toLeft':\n        default:\n          return rect.width > width\n            ? width - rect.width\n            : 0\n      }\n    case 'chain':\n    default:\n      switch (direction) {\n        case 'toRight':\n          return 0\n        case 'toLeft':\n        default:\n          return rect.width + start > width\n            ? width - rect.width\n            : width - rect.left - rect.width\n      }\n  }\n}\n\nexport default ({ mode, index, rect, offset, width, direction }) => {\n  const from = getFrom({ index, rect, offset, width, direction })\n  const to = getTo({ rect, width, direction })\n  return {\n    from,\n    to,\n    next: getNext({ mode, from, direction, rect, width })\n  }\n}\n","export default function getNextOffset({ from, rect, direction }) {\n  switch (direction) {\n    case 'toRight': {\n      return from\n    }\n    case 'toLeft':\n    default: {\n      return from + rect.width\n    }\n  }\n}\n","export default function getStartOffset({ offset, rect, direction, width }) {\n  if (offset === 'run-in') {\n    switch (direction) {\n      case 'toRight':\n        return -rect.width\n      case 'toLeft':\n      default:\n        return width\n    }\n  }\n  if (typeof offset === 'string') {\n    const offsetRelative = Number(offset.replace('%', ''))\n    if (offsetRelative) return (width / 100) * offsetRelative\n  }\n  return offset\n}\n","import React from 'react'\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types'\n\nimport shouldNextTriggerOnMount from './utils/shouldNextTriggerOnMount'\nimport getPosition from './utils/getPosition'\nimport getNextOffset from './utils/getNextOffset'\nimport getStartOffset from './utils/getStartOffset'\n\nclass TickerElement extends React.Component {\n  static propTypes = {\n    children: oneOfType([node, func]).isRequired,\n    direction: string.isRequired,\n    speed: number.isRequired,\n    id: string.isRequired,\n    index: number.isRequired,\n    mode: string.isRequired,\n    move: bool.isRequired,\n    onNext: func.isRequired,\n    onFinish: func.isRequired,\n    setRect: func.isRequired,\n    start: bool.isRequired,\n\n    offset: oneOfType([number, string]),\n    prevRect: object,\n    width: number\n  }\n\n  static defaultProps = {\n    offset: undefined,\n    width: undefined,\n    prevRect: null\n  }\n\n  state = {\n    children: this.props.children({\n      index: this.props.index\n    }),\n    move: this.props.move,\n    position: { from: undefined, to: undefined, next: undefined },\n    offset: this.props.offset,\n    rect: null\n  }\n  x = 0\n  isMoving = false\n  nextTriggered = false\n  elementRef = React.createRef()\n  raf = null\n\n  componentDidMount = () => {\n    this.setPosition(true)\n    this.observer = new MutationObserver(this.onMutation)\n    this.observer.observe(this.elementRef.current, { characterData: true, childList: true, subtree: true })\n  }\n\n  componentWillUnmount = () => {\n    this.observer.disconnect()\n  }\n\n  onMutation = () => {\n    this.setPosition()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (!this.x && prevState.position.from !== this.state.position.from) {\n      this.x = this.state.position.from\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n    }\n    if (this.x !== this.state.position.from &&\n      prevProps.prevRect &&\n      this.props.prevRect &&\n      prevProps.prevRect.width !== this.props.prevRect.width) {\n      if (this.props.offset) {\n        this.x = this.x + (this.props.offset - prevProps.offset)\n      } else {\n        this.x = this.x + (this.props.prevRect.width - prevProps.prevRect.width)\n      }\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n    }\n    if (this.props.move && !prevProps.start && this.props.start) {\n      this.animate()\n    }\n    if (this.props.start && !prevProps.move && this.props.move) {\n      this.animate()\n    }\n    if (prevProps.move && !this.props.move) {\n      this.isMoving = false\n      window.cancelAnimationFrame(this.raf)\n    }\n  }\n\n  setPosition = (isMount) => {\n    const {\n      mode,\n      width,\n      id,\n      onNext,\n      direction,\n      index,\n      setRect\n    } = this.props\n\n    const rect = this.elementRef.current.getBoundingClientRect()\n    if (rect.width === 0) return\n\n    const offset = this.props.index === 0\n      ? getStartOffset({ offset: this.props.offset, rect, direction, width })\n      : this.props.offset\n\n    const position = getPosition({ mode, rect, index, offset, width, direction })\n\n    setRect({\n      index: this.props.index,\n      rect,\n      offset,\n      nextOffset: getNextOffset({ from: position.from, rect, direction })\n    })\n\n    if (isMount) {\n      const nextTriggerOnMount = shouldNextTriggerOnMount({ mode, rect, position, offset, direction, width })\n      if (nextTriggerOnMount) {\n        onNext({\n          id,\n          index,\n          rect,\n          nextOffset: getNextOffset({ from: position.from, rect, direction })\n        })\n      }\n      if (!nextTriggerOnMount && (offset || index === 0)) {\n        onNext({ id, index, rect })\n      }\n      this.nextTriggered = nextTriggerOnMount\n    }\n\n    this.setState({\n      rect,\n      offset,\n      position\n    })\n  }\n\n  shouldTriggerNext = () => {\n    if (this.nextTriggered) return false\n    return this.props.direction === 'toLeft'\n      ? this.x <= this.state.position.next\n      : this.x >= this.state.position.next\n  }\n\n  triggerNext = () => {\n    if (this.shouldTriggerNext()) {\n      // if (this.props.index === 5) console.log(this.x)\n      this.nextTriggered = true\n      this.props.onNext({\n        id: this.props.id,\n        index: this.props.index,\n        rect: this.state.rect\n      })\n    }\n  }\n\n  shouldFinish = () => {\n    switch (this.props.direction) {\n      case 'toRight':\n        return this.x >= this.state.position.to\n      case 'toLeft':\n      default:\n        return this.x <= this.state.position.to\n    }\n  }\n\n  animate = () => {\n    if (this.isMoving) return\n    this.isMoving = true\n\n    let prevTimestamp = null\n\n    const step = (timestamp) => {\n      if (!this.isMoving) return\n      if (!this.elementRef.current) return\n\n      const progress = prevTimestamp\n        ? timestamp - prevTimestamp\n        : 0\n\n      this.x = this.props.direction === 'toLeft'\n        ? this.x - (progress / 100 * this.props.speed)\n        : this.x + (progress / 100 * this.props.speed)\n      this.elementRef.current.style.transform = `translate3d(${this.x}px, 0, 0)`\n      this.triggerNext()\n\n      if (this.shouldFinish()) {\n        this.isMoving = false\n        prevTimestamp = null\n        this.props.onFinish(this.props.id)\n      } else {\n        prevTimestamp = timestamp\n        this.raf = window.requestAnimationFrame(step)\n      }\n    }\n    this.raf = window.requestAnimationFrame(step)\n  }\n\n  render = () => (\n    <div\n      className='ticker__element'\n      style={{\n        willChange: 'transform',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        transform: `translate3d(${this.x}px, 0, 0)`\n      }}\n      ref={this.elementRef}\n    >\n      {this.state.children}\n    </div>\n  )\n}\n\nexport default TickerElement\n","\nimport guidGenerator from './guidGenerator'\n\nconst getDefaultState = (offset, width) => ({\n  elements: [{\n    id: guidGenerator(),\n    index: 0,\n    height: 0,\n    start: false,\n    offset: offset,\n    rect: null,\n    prevRect: null\n  }],\n  width,\n  height: 0\n})\n\nexport default getDefaultState\n","import React from 'react'\nimport {bool, func, node, number, oneOfType, string} from 'prop-types'\nimport debounce from './utils/debounce'\nimport guidGenerator from './utils/guidGenerator'\nimport getHighest from './utils/getHighest'\nimport TickerElement from './Element'\nimport getDefaultState from './utils/getDefaultState'\n\nexport default class Ticker extends React.Component {\n  static propTypes = {\n    children: oneOfType([node, func]).isRequired,\n\n    direction: string,\n    mode: string,\n    move: bool,\n    offset: oneOfType([number, string]),\n    speed: number,\n    height: oneOfType([number, string]),\n    onNext: func,\n    onFinish: func\n  }\n\n  static defaultProps = {\n    offset: 0,\n    speed: 5,\n    direction: 'toLeft',\n    mode: 'chain',\n    move: true,\n    height: undefined,\n    onNext: () => {},\n    onFinish: () => {}\n  }\n  next = null\n  state = getDefaultState(this.props.offset)\n  tickerRef = React.createRef()\n\n  dOnResize = debounce(() => this.onResize(), 150)\n\n  componentDidMount = () => {\n    this.setState({\n      width: this.tickerRef.current.offsetWidth,\n      height: this.props.height\n    })\n    window.addEventListener('resize', this.dOnResize)\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.dOnResize)\n  }\n\n  setRect = ({index, rect, offset, nextOffset}) => {\n    this.setState(prevState => {\n      const elements = prevState.elements.map(el => {\n        const newEl = el\n        if (el.index === index) newEl.rect = rect\n        // next element\n        if (el.index === index + 1) {\n          newEl.prevRect = rect\n          if (newEl.offset) {\n            newEl.offset = nextOffset\n          }\n        }\n        return newEl\n      })\n      return {\n        elements,\n        height: this.props.height\n          ? prevState.height\n          : getHighest(elements)\n      }\n    })\n  }\n\n  onResize = () => {\n    if (!this.tickerRef.current || this.tickerRef.current.offsetWidth === this.state.width) return\n    this.setState({\n      ...getDefaultState(this.props.offset, this.tickerRef.current.offsetWidth),\n      height: this.props.height\n    })\n  }\n\n  onFinish = (id) => {\n    this.props.onFinish()\n    this.setState(prevState => ({\n      elements: prevState.elements.filter(el => el.id !== id)\n    }))\n  }\n\n  onNext = ({id, index, rect, nextOffset}) => {\n    this.props.onNext(index)\n\n    this.setState(prevState => ({\n      elements: [\n        // start next element\n        ...prevState.elements.map(el => {\n          const newEl = el\n          if (el.index === index) newEl.rect = rect\n          if (el.index === 0 || el.offset || newEl.index === index + 1) {\n            newEl.start = true\n          }\n          return newEl\n          // create new element\n        }), {\n          id: guidGenerator(),\n          index: prevState.elements[prevState.elements.length - 1].index + 1,\n          height: 0,\n          start: false,\n          offset: nextOffset,\n          rect: null,\n          prevRect: rect\n        }\n      ]\n    }))\n  }\n\n  render() {\n\n    return (\n      <div\n        className='ticker'\n        ref={this.tickerRef}\n        style={{\n          position: 'relative',\n          overflow: 'hidden',\n          height: this.state.height && `${this.state.height}px`\n        }}\n      >\n        {\n          this.state.width && this.state.elements.map(el => {\n            return (\n              <TickerElement\n                key={el.id}\n                id={el.id}\n                index={el.index}\n                start={el.start}\n                offset={el.offset}\n                prevRect={el.prevRect}\n\n                direction={this.props.direction}\n                mode={this.props.mode}\n                move={this.props.move}\n                speed={this.props.speed}\n\n                onFinish={this.onFinish}\n                onNext={this.onNext}\n                setRect={this.setRect}\n                width={this.state.width}\n              >\n                {this.props.children}\n              </TickerElement>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}