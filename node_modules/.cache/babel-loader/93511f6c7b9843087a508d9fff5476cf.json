{"ast":null,"code":"import { action, makeObservable, observable } from \"mobx\";\nimport { getToken } from \"./../components/services/gecko.service\";\nimport { usDollar } from \"./../components/services/transactions.service\";\nimport moment from \"moment\";\nclass TokenStoreImpl {\n  constructor() {\n    this.tokenData = [];\n    this.tokenIds = [{\n      id: null,\n      user: null,\n      ts: 0\n    }];\n    this.addToken = async (id, user) => {\n      var _this$tokenIds;\n      const tsDiff = Number(new Date().getTime()) - Number((_this$tokenIds = this.tokenIds[this.tokenIds.length - 1]) === null || _this$tokenIds === void 0 ? void 0 : _this$tokenIds.ts);\n      const isReady = tsDiff > 2000;\n      if (isReady) {\n        this.tokenIds.push({\n          id,\n          ts: new Date().getTime(),\n          user\n        });\n        const tokenObj = {};\n        for (let i in this.tokenData) {\n          if (this.tokenData[i].id !== id) {\n            tokenObj[this.tokenData[i].id] = this.tokenData[i];\n          }\n        }\n        try {\n          const response = await getToken(id);\n          const price = response.data.market_data.sparkline_7d.price;\n          const ts = moment().subtract(price.length - 1, \"h\");\n          const fData = [];\n          for (let p in price) {\n            fData.push({\n              USD: Number(price[p]),\n              time: ts.format(\"L LT\")\n            });\n            ts.add(1, \"h\");\n          }\n          response.data.market_data.sparkline_7d.price = fData;\n          const tokenData = Object.values(tokenObj);\n          tokenData.push(response.data);\n          this.tokenData = tokenData;\n        } catch (error) {\n          console.error(error);\n        }\n        if (this.tokenData.length > 10) {\n          this.tokenData.shift();\n        }\n      }\n      console.log(this.tokenIds);\n    };\n  }\n  constuctor() {\n    makeObservable(this, {\n      tokenData: observable,\n      addToken: action\n    });\n  }\n}\nexport const TokenStore = new TokenStoreImpl();","map":{"version":3,"names":["action","makeObservable","observable","getToken","usDollar","moment","TokenStoreImpl","tokenData","tokenIds","id","user","ts","addToken","tsDiff","Number","Date","getTime","length","isReady","push","tokenObj","i","response","price","data","market_data","sparkline_7d","subtract","fData","p","USD","time","format","add","Object","values","error","console","shift","log","constuctor","TokenStore"],"sources":["/Users/Ibis/Projects/project_mern_memories/client/src/store/TokenStore.js"],"sourcesContent":["import { action, makeObservable, observable } from \"mobx\";\nimport { getToken } from \"./../components/services/gecko.service\";\nimport { usDollar } from \"./../components/services/transactions.service\";\nimport moment from \"moment\";\n\nclass TokenStoreImpl {\n  tokenData = [];\n  tokenIds = [{ id: null, user: null, ts: 0, }];\n  constuctor() {\n    makeObservable(this, { tokenData: observable, addToken: action });\n  }\n\n  addToken = async (id, user) => {\n    const tsDiff =\n      Number(new Date().getTime()) -\n      Number(this.tokenIds[this.tokenIds.length - 1]?.ts);\n    const isReady = tsDiff > 2000;\n    if (isReady) {\n      this.tokenIds.push({ id, ts: new Date().getTime(), user });\n      const tokenObj = {};\n      for (let i in this.tokenData) {\n        if (this.tokenData[i].id !== id) {\n          tokenObj[this.tokenData[i].id] = this.tokenData[i];\n        }\n      }\n      try {\n        const response = await getToken(id);\n        const price = response.data.market_data.sparkline_7d.price;\n        const ts = moment().subtract(price.length - 1, \"h\");\n        const fData = [];\n        for (let p in price) {\n          fData.push({\n            USD: Number(price[p]),\n            time: ts.format(\"L LT\"),\n          });\n          ts.add(1, \"h\");\n        }\n        response.data.market_data.sparkline_7d.price = fData;\n        const tokenData = Object.values(tokenObj);\n        tokenData.push(response.data);\n        this.tokenData = tokenData;\n      } catch (error) {\n        console.error(error);\n      }\n      if (this.tokenData.length > 10) {\n        this.tokenData.shift();\n      }\n    }\n    console.log(this.tokenIds)\n  };\n}\n\nexport const TokenStore = new TokenStoreImpl();\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,cAAc,EAAEC,UAAU,QAAQ,MAAM;AACzD,SAASC,QAAQ,QAAQ,wCAAwC;AACjE,SAASC,QAAQ,QAAQ,+CAA+C;AACxE,OAAOC,MAAM,MAAM,QAAQ;AAE3B,MAAMC,cAAc,CAAC;EAAA;IAAA,KACnBC,SAAS,GAAG,EAAE;IAAA,KACdC,QAAQ,GAAG,CAAC;MAAEC,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE,IAAI;MAAEC,EAAE,EAAE;IAAG,CAAC,CAAC;IAAA,KAK7CC,QAAQ,GAAG,OAAOH,EAAE,EAAEC,IAAI,KAAK;MAAA;MAC7B,MAAMG,MAAM,GACVC,MAAM,CAAC,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CAAC,GAC5BF,MAAM,mBAAC,IAAI,CAACN,QAAQ,CAAC,IAAI,CAACA,QAAQ,CAACS,MAAM,GAAG,CAAC,CAAC,mDAAvC,eAAyCN,EAAE,CAAC;MACrD,MAAMO,OAAO,GAAGL,MAAM,GAAG,IAAI;MAC7B,IAAIK,OAAO,EAAE;QACX,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC;UAAEV,EAAE;UAAEE,EAAE,EAAE,IAAII,IAAI,EAAE,CAACC,OAAO,EAAE;UAAEN;QAAK,CAAC,CAAC;QAC1D,MAAMU,QAAQ,GAAG,CAAC,CAAC;QACnB,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACd,SAAS,EAAE;UAC5B,IAAI,IAAI,CAACA,SAAS,CAACc,CAAC,CAAC,CAACZ,EAAE,KAAKA,EAAE,EAAE;YAC/BW,QAAQ,CAAC,IAAI,CAACb,SAAS,CAACc,CAAC,CAAC,CAACZ,EAAE,CAAC,GAAG,IAAI,CAACF,SAAS,CAACc,CAAC,CAAC;UACpD;QACF;QACA,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMnB,QAAQ,CAACM,EAAE,CAAC;UACnC,MAAMc,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACC,YAAY,CAACH,KAAK;UAC1D,MAAMZ,EAAE,GAAGN,MAAM,EAAE,CAACsB,QAAQ,CAACJ,KAAK,CAACN,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC;UACnD,MAAMW,KAAK,GAAG,EAAE;UAChB,KAAK,IAAIC,CAAC,IAAIN,KAAK,EAAE;YACnBK,KAAK,CAACT,IAAI,CAAC;cACTW,GAAG,EAAEhB,MAAM,CAACS,KAAK,CAACM,CAAC,CAAC,CAAC;cACrBE,IAAI,EAAEpB,EAAE,CAACqB,MAAM,CAAC,MAAM;YACxB,CAAC,CAAC;YACFrB,EAAE,CAACsB,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;UAChB;UACAX,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACC,YAAY,CAACH,KAAK,GAAGK,KAAK;UACpD,MAAMrB,SAAS,GAAG2B,MAAM,CAACC,MAAM,CAACf,QAAQ,CAAC;UACzCb,SAAS,CAACY,IAAI,CAACG,QAAQ,CAACE,IAAI,CAAC;UAC7B,IAAI,CAACjB,SAAS,GAAGA,SAAS;QAC5B,CAAC,CAAC,OAAO6B,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB;QACA,IAAI,IAAI,CAAC7B,SAAS,CAACU,MAAM,GAAG,EAAE,EAAE;UAC9B,IAAI,CAACV,SAAS,CAAC+B,KAAK,EAAE;QACxB;MACF;MACAD,OAAO,CAACE,GAAG,CAAC,IAAI,CAAC/B,QAAQ,CAAC;IAC5B,CAAC;EAAA;EAzCDgC,UAAU,GAAG;IACXvC,cAAc,CAAC,IAAI,EAAE;MAAEM,SAAS,EAAEL,UAAU;MAAEU,QAAQ,EAAEZ;IAAO,CAAC,CAAC;EACnE;AAwCF;AAEA,OAAO,MAAMyC,UAAU,GAAG,IAAInC,cAAc,EAAE"},"metadata":{},"sourceType":"module"}