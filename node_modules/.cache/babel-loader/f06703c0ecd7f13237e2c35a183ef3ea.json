{"ast":null,"code":"import axios from \"axios\";\nimport Web3 from \"web3\";\nconst ping = async () => {\n  let status;\n  try {\n    status = await axios(\"https://api.coingecko.com/api/v3/ping\");\n  } catch (e) {\n    console.error(e);\n  }\n  return status;\n};\nconst tokens = async ids => {\n  let tokensData;\n  try {\n    tokensData = await axios(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${ids}&order=market_cap_desc&per_page=250&page=1&sparkline=true`);\n  } catch (error) {\n    console.error(error);\n  }\n  return tokensData;\n};\nconst getToken = async id => {\n  let tokenData;\n  try {\n    tokenData = await axios(`https://api.coingecko.com/api/v3/coins/${id}?tickers=false&community_data=true&developer_data=true&sparkline=true`);\n  } catch (error) {\n    console.error(error);\n  }\n  return tokenData;\n};\nconst tickers = async (exchangeId, primaryTokens) => {\n  var _res, _res$data;\n  let res;\n  try {\n    res = await axios(`https://api.coingecko.com/api/v3/exchanges/${exchangeId}/tickers`);\n  } catch (error) {\n    console.error(error);\n  }\n  const uniqueData = {};\n  let ids = [];\n  let checksums = [];\n  const tickerData = (_res = res) === null || _res === void 0 ? void 0 : (_res$data = _res.data) === null || _res$data === void 0 ? void 0 : _res$data.tickers;\n  if (!!tickerData) {\n    for (let x in tickerData) {\n      if (!ids.includes(tickerData[x].coin_id)) {\n        ids.push(tickerData[x].coin_id);\n        if (Web3.utils.isAddress(tickerData[x].base)) {\n          const baseChecksum = Web3.utils.toChecksumAddress(tickerData[x].base);\n          uniqueData[tickerData[x].coin_id] = {\n            address: baseChecksum,\n            id: tickerData[x].coin_id\n          };\n        } else {\n          uniqueData[tickerData[x].coin_id] = {\n            address: tickerData[x].base,\n            id: tickerData[x].coin_id\n          };\n        }\n      }\n      if (!ids.includes(tickerData[x].target_coin_id)) {\n        ids.push(tickerData[x].target_coin_id);\n        if (Web3.utils.isAddress(tickerData[x].target)) {\n          const targetChecksum = Web3.utils.toChecksumAddress(tickerData[x].target);\n          uniqueData[tickerData[x].target_coin_id] = {\n            address: targetChecksum,\n            id: tickerData[x].target_coin_id\n          };\n        } else {\n          uniqueData[tickerData[x].target_coin_id] = {\n            address: tickerData[x].target,\n            id: tickerData[x].target_coin_id\n          };\n        }\n      }\n    }\n  }\n  const idString = ids.join(\",\");\n  let tokenData;\n  let uniqueArray;\n  try {\n    tokenData = await tokens(idString);\n  } catch (e) {\n    console.error(e);\n  }\n  if (!!tokenData) {\n    for (let x in tokenData.data) {\n      uniqueData[tokenData.data[x].id].image = tokenData.data[x].image;\n      uniqueData[tokenData.data[x].id].name = tokenData.data[x].name;\n      uniqueData[tokenData.data[x].id].symbol = tokenData.data[x].symbol;\n      uniqueData[tokenData.data[x].id].last = tokenData.data[x].current_price;\n      uniqueData[tokenData.data[x].id].change24h = tokenData.data[x].price_change_24h;\n      uniqueData[tokenData.data[x].id].id = tokenData.data[x].id;\n    }\n    for (let x in ids) {\n      var _uniqueData$ids$x;\n      if (!!((_uniqueData$ids$x = uniqueData[ids[x]]) === null || _uniqueData$ids$x === void 0 ? void 0 : _uniqueData$ids$x.image)) {\n        checksums.push(uniqueData[ids[x]].address);\n      }\n    }\n    uniqueArray = primaryTokens.filter(v => !checksums.includes(Web3.utils.toChecksumAddress(Web3.utils.isAddress(v.address) && v.address)));\n    for (let x in ids) {\n      var _uniqueData$ids$x2;\n      if (!!((_uniqueData$ids$x2 = uniqueData[ids[x]]) === null || _uniqueData$ids$x2 === void 0 ? void 0 : _uniqueData$ids$x2.image)) {\n        uniqueArray.push(uniqueData[ids[x]]);\n      }\n    }\n  }\n  return uniqueArray;\n};\nexport { ping, tickers, getToken };","map":{"version":3,"names":["axios","Web3","ping","status","e","console","error","tokens","ids","tokensData","getToken","id","tokenData","tickers","exchangeId","primaryTokens","res","uniqueData","checksums","tickerData","data","x","includes","coin_id","push","utils","isAddress","base","baseChecksum","toChecksumAddress","address","target_coin_id","target","targetChecksum","idString","join","uniqueArray","image","name","symbol","last","current_price","change24h","price_change_24h","filter","v"],"sources":["/Users/Ibis/Projects/project_mern_memories/client/src/components/services/gecko.service.js"],"sourcesContent":["import axios from \"axios\";\nimport Web3 from \"web3\";\n\nconst ping = async () => {\n  let status;\n  try {\n    status = await axios(\"https://api.coingecko.com/api/v3/ping\");\n  } catch (e) {\n    console.error(e);\n  }\n  return status;\n};\nconst tokens = async (ids) => {\n  let tokensData;\n  try {\n    tokensData = await axios(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${ids}&order=market_cap_desc&per_page=250&page=1&sparkline=true`\n    );\n  } catch (error) {\n    console.error(error);\n  }\n  return tokensData;\n};\nconst getToken = async (id) => {\n  let tokenData;\n  try {\n    tokenData = await axios(\n      `https://api.coingecko.com/api/v3/coins/${id}?tickers=false&community_data=true&developer_data=true&sparkline=true`\n    );\n  } catch (error) {\n    console.error(error);\n  }\n  return tokenData;\n};\nconst tickers = async (exchangeId, primaryTokens) => {\n  let res;\n  try {\n    res = await axios(\n      `https://api.coingecko.com/api/v3/exchanges/${exchangeId}/tickers`\n    );\n  } catch (error) {\n    console.error(error);\n  }\n  const uniqueData = {};\n  let ids = [];\n  let checksums = [];\n  const tickerData = res?.data?.tickers;\n  if (!!tickerData) {\n    for (let x in tickerData) {\n      if (!ids.includes(tickerData[x].coin_id)) {\n        ids.push(tickerData[x].coin_id);\n        if (Web3.utils.isAddress(tickerData[x].base)) {\n          const baseChecksum = Web3.utils.toChecksumAddress(tickerData[x].base);\n          uniqueData[tickerData[x].coin_id] = {\n            address: baseChecksum,\n            id: tickerData[x].coin_id,\n          };\n        } else {\n          uniqueData[tickerData[x].coin_id] = {\n            address: tickerData[x].base,\n            id: tickerData[x].coin_id,\n          };\n        }\n      }\n      if (!ids.includes(tickerData[x].target_coin_id)) {\n        ids.push(tickerData[x].target_coin_id);\n        if (Web3.utils.isAddress(tickerData[x].target)) {\n          const targetChecksum = Web3.utils.toChecksumAddress(\n            tickerData[x].target\n          );\n          uniqueData[tickerData[x].target_coin_id] = {\n            address: targetChecksum,\n            id: tickerData[x].target_coin_id,\n          };\n        } else {\n          uniqueData[tickerData[x].target_coin_id] = {\n            address: tickerData[x].target,\n            id: tickerData[x].target_coin_id,\n          };\n        }\n      }\n    }\n  }\n\n  const idString = ids.join(\",\");\n  let tokenData;\n  let uniqueArray;\n  try {\n    tokenData = await tokens(idString);\n  } catch (e) {\n    console.error(e);\n  }\n  if (!!tokenData) {\n    for (let x in tokenData.data) {\n      uniqueData[tokenData.data[x].id].image = tokenData.data[x].image;\n      uniqueData[tokenData.data[x].id].name = tokenData.data[x].name;\n      uniqueData[tokenData.data[x].id].symbol = tokenData.data[x].symbol;\n      uniqueData[tokenData.data[x].id].last = tokenData.data[x].current_price;\n      uniqueData[tokenData.data[x].id].change24h =\n        tokenData.data[x].price_change_24h;\n      uniqueData[tokenData.data[x].id].id = tokenData.data[x].id;\n    }\n\n    for (let x in ids) {\n      if (!!uniqueData[ids[x]]?.image) {\n        checksums.push(uniqueData[ids[x]].address);\n      }\n    }\n    uniqueArray = primaryTokens.filter(\n      (v) =>\n        !checksums.includes(\n          Web3.utils.toChecksumAddress(\n            Web3.utils.isAddress(v.address) && v.address\n          )\n        )\n    );\n    for (let x in ids) {\n      if (!!uniqueData[ids[x]]?.image) {\n        uniqueArray.push(uniqueData[ids[x]]);\n      }\n    }\n  }\n  return uniqueArray;\n};\n\nexport { ping, tickers, getToken };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}