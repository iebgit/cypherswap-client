{"ast":null,"code":"import { createTrackingData } from \"./reactionCleanupTrackingCommon\";\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\nexport function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\n  var cleanupTokenToReactionTrackingMap = new Map();\n  var globalCleanupTokensCounter = 1;\n  var registry = new FinalizationRegistry(function cleanupFunction(token) {\n    var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\n    if (trackedReaction) {\n      trackedReaction.reaction.dispose();\n      cleanupTokenToReactionTrackingMap.delete(token);\n    }\n  });\n  return {\n    addReactionToTrack: function (reactionTrackingRef, reaction, objectRetainedByReact) {\n      var token = globalCleanupTokensCounter++;\n      registry.register(objectRetainedByReact, token, reactionTrackingRef);\n      reactionTrackingRef.current = createTrackingData(reaction);\n      reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\n      cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\n      return reactionTrackingRef.current;\n    },\n    recordReactionAsCommitted: function (reactionRef) {\n      registry.unregister(reactionRef);\n      if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n        cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\n      }\n    },\n    forceCleanupTimerToRunNowForTests: function () {\n      // When FinalizationRegistry in use, this this is no-op\n    },\n    resetCleanupScheduleForTests: function () {\n      // When FinalizationRegistry in use, this this is no-op\n    }\n  };\n}","map":{"version":3,"sources":["../../src/utils/createReactionCleanupTrackingUsingFinalizationRegister.ts"],"names":[],"mappings":"AAEA,SAGI,kBAAkB,QACf,iCAAiC;AAExC;;AAEG;AACH,OAAM,SAAU,sDAAsD,CAClE,oBAA4E,EAAA;EAE5E,IAAM,iCAAiC,GAAG,IAAI,GAAG,EAA6B;EAC9E,IAAI,0BAA0B,GAAG,CAAC;EAElC,IAAM,QAAQ,GAAG,IAAI,oBAAoB,CAAC,SAAS,eAAe,CAAC,KAAa,EAAA;IAC5E,IAAM,eAAe,GAAG,iCAAiC,CAAC,GAAG,CAAC,KAAK,CAAC;IACpE,IAAI,eAAe,EAAE;MACjB,eAAe,CAAC,QAAQ,CAAC,OAAO,EAAE;MAClC,iCAAiC,CAAC,MAAM,CAAC,KAAK,CAAC;IAClD;EACL,CAAC,CAAC;EAEF,OAAO;IACH,kBAAkB,EAAlB,UACI,mBAAqE,EACrE,QAAkB,EAClB,qBAA6B,EAAA;MAE7B,IAAM,KAAK,GAAG,0BAA0B,EAAE;MAE1C,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,EAAE,KAAK,EAAE,mBAAmB,CAAC;MACpE,mBAAmB,CAAC,OAAO,GAAG,kBAAkB,CAAC,QAAQ,CAAC;MAC1D,mBAAmB,CAAC,OAAO,CAAC,gCAAgC,GAAG,KAAK;MACpE,iCAAiC,CAAC,GAAG,CAAC,KAAK,EAAE,mBAAmB,CAAC,OAAO,CAAC;MAEzE,OAAO,mBAAmB,CAAC,OAAO;IACtC,CAAC;IACD,yBAAyB,EAAzB,UAA0B,WAA6D,EAAA;MACnF,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC;MAEhC,IAAI,WAAW,CAAC,OAAO,IAAI,WAAW,CAAC,OAAO,CAAC,gCAAgC,EAAE;QAC7E,iCAAiC,CAAC,MAAM,CACpC,WAAW,CAAC,OAAO,CAAC,gCAAgC,CACvD;MACJ;IACL,CAAC;IACD,iCAAiC,EAAA,YAAA;MAC7B;IAAA,CACH;IACD,4BAA4B,EAAA,YAAA;MACxB;IAAA;GAEP;AACL","sourceRoot":"","sourcesContent":["import { createTrackingData } from \"./reactionCleanupTrackingCommon\";\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\nexport function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\n    var cleanupTokenToReactionTrackingMap = new Map();\n    var globalCleanupTokensCounter = 1;\n    var registry = new FinalizationRegistry(function cleanupFunction(token) {\n        var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\n        if (trackedReaction) {\n            trackedReaction.reaction.dispose();\n            cleanupTokenToReactionTrackingMap.delete(token);\n        }\n    });\n    return {\n        addReactionToTrack: function (reactionTrackingRef, reaction, objectRetainedByReact) {\n            var token = globalCleanupTokensCounter++;\n            registry.register(objectRetainedByReact, token, reactionTrackingRef);\n            reactionTrackingRef.current = createTrackingData(reaction);\n            reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\n            cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\n            return reactionTrackingRef.current;\n        },\n        recordReactionAsCommitted: function (reactionRef) {\n            registry.unregister(reactionRef);\n            if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n                cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\n            }\n        },\n        forceCleanupTimerToRunNowForTests: function () {\n            // When FinalizationRegistry in use, this this is no-op\n        },\n        resetCleanupScheduleForTests: function () {\n            // When FinalizationRegistry in use, this this is no-op\n        }\n    };\n}\n//# sourceMappingURL=createReactionCleanupTrackingUsingFinalizationRegister.js.map"]},"metadata":{},"sourceType":"module"}