{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (options == null) {\n      options = {};\n    }\n    const request = {\n      method: options.method || \"GET\",\n      headers: options.headers || {},\n      body: options.body || undefined\n    };\n    if (options.skipFetchSetup !== true) {\n      request.mode = \"cors\"; // no-cors, cors, *same-origin\n      request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n      request.credentials = \"same-origin\"; // include, *same-origin, omit\n      request.redirect = \"follow\"; // manual, *follow, error\n      request.referrer = \"client\"; // no-referrer, *client\n    }\n\n    ;\n    if (options.fetchOptions != null) {\n      const opts = options.fetchOptions;\n      if (opts.mode) {\n        request.mode = opts.mode;\n      }\n      if (opts.cache) {\n        request.cache = opts.cache;\n      }\n      if (opts.credentials) {\n        request.credentials = opts.credentials;\n      }\n      if (opts.redirect) {\n        request.redirect = opts.redirect;\n      }\n      if (opts.referrer) {\n        request.referrer = opts.referrer;\n      }\n    }\n    const response = yield fetch(href, request);\n    const body = yield response.arrayBuffer();\n    const headers = {};\n    if (response.headers.forEach) {\n      response.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n    } else {\n      response.headers.keys().forEach(key => {\n        headers[key.toLowerCase()] = response.headers.get(key);\n      });\n    }\n    return {\n      headers: headers,\n      statusCode: response.status,\n      statusMessage: response.statusText,\n      body: arrayify(new Uint8Array(body))\n    };\n  });\n}","map":{"version":3,"sources":["../src.ts/browser-geturl.ts"],"names":[],"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEZ,SAAS,QAAQ,QAAQ,sBAAsB;AAM/C,OAAM,SAAgB,MAAM,CAAC,IAAY,EAAE,OAAiB,EAAA;;IACxD,IAAI,OAAO,IAAI,IAAI,EAAE;MAAE,OAAO,GAAG,CAAA,CAAG;IAAG;IAEvC,MAAM,OAAO,GAAgB;MACzB,MAAM,EAAG,OAAO,CAAC,MAAM,IAAI,KAAM;MACjC,OAAO,EAAG,OAAO,CAAC,OAAO,IAAI,CAAA,CAAI;MACjC,IAAI,EAAG,OAAO,CAAC,IAAI,IAAI;KAC1B;IAED,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,EAAE;MACjC,OAAO,CAAC,IAAI,GAAgB,MAAM,CAAC,CAAc;MACjD,OAAO,CAAC,KAAK,GAAiB,UAAU,CAAC,CAAQ;MACjD,OAAO,CAAC,WAAW,GAAuB,aAAa,CAAC,CAAE;MAC1D,OAAO,CAAC,QAAQ,GAAoB,QAAQ,CAAC,CAAI;MACjD,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAqB;IACpD;;IAAA;IAED,IAAI,OAAO,CAAC,YAAY,IAAI,IAAI,EAAE;MAC9B,MAAM,IAAI,GAAG,OAAO,CAAC,YAAY;MACjC,IAAI,IAAI,CAAC,IAAI,EAAE;QAAE,OAAO,CAAC,IAAI,GAAiB,IAAI,CAAC,IAAK;MAAG;MAC3D,IAAI,IAAI,CAAC,KAAK,EAAE;QAAE,OAAO,CAAC,KAAK,GAAkB,IAAI,CAAC,KAAM;MAAG;MAC/D,IAAI,IAAI,CAAC,WAAW,EAAE;QAAE,OAAO,CAAC,WAAW,GAAwB,IAAI,CAAC,WAAY;MAAG;MACvF,IAAI,IAAI,CAAC,QAAQ,EAAE;QAAE,OAAO,CAAC,QAAQ,GAAqB,IAAI,CAAC,QAAS;MAAG;MAC3E,IAAI,IAAI,CAAC,QAAQ,EAAE;QAAE,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;MAAG;IAC3D;IAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC;IAC3C,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,WAAW,EAAE;IAEzC,MAAM,OAAO,GAAiC,CAAA,CAAG;IACjD,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE;MAC1B,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,KAAI;QACpC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,KAAK;MACtC,CAAC,CAAC;KACL,MAAM;MAC2B,QAAQ,CAAC,OAAO,CAAG,IAAI,EAAI,CAAC,OAAO,CAAE,GAAG,IAAI;QACtE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;MAC1D,CAAC,CAAC;IACL;IAED,OAAO;MACH,OAAO,EAAE,OAAO;MAChB,UAAU,EAAE,QAAQ,CAAC,MAAM;MAC3B,aAAa,EAAE,QAAQ,CAAC,UAAU;MAClC,IAAI,EAAE,QAAQ,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC;KACtC;EACL,CAAC,CAAA;AAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        if (options.fetchOptions != null) {\n            const opts = options.fetchOptions;\n            if (opts.mode) {\n                request.mode = (opts.mode);\n            }\n            if (opts.cache) {\n                request.cache = (opts.cache);\n            }\n            if (opts.credentials) {\n                request.credentials = (opts.credentials);\n            }\n            if (opts.redirect) {\n                request.redirect = (opts.redirect);\n            }\n            if (opts.referrer) {\n                request.referrer = opts.referrer;\n            }\n        }\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map"]},"metadata":{},"sourceType":"module"}